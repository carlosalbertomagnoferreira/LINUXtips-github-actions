name: "Nível 3: Containers e Segurança"

on:
  pull_request:
    types: [closed]
    branches: [ desafio-nivel-3 ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  CHALLENGE_LEVEL: 3
  CHALLENGE_NAME: "containers-e-seguranca"
  REGISTRY: ghcr.io
  REPOSITORY_IMAGE:  "${{ github.actor }}/${{ vars.IMAGE_NAME }}"

jobs:
  build-scan-and-push:
    name: "Build, Lint, Trivy Scan e Push no GHCR"
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      tag-image: ${{ steps.meta.outputs.SHORT_SHA }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: SHA Last Commit
        id: meta
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: |
            ${{ vars.IMAGE_NAME }}:latest
            ghcr.io/${{ env.REPOSITORY_IMAGE }}:${{ steps.meta.outputs.SHORT_SHA }}
            ghcr.io/${{ env.REPOSITORY_IMAGE }}:latest

      - name: Docker Image Smoke Test
        run: |
          docker container run -d -p8181:3000 ${{ vars.IMAGE_NAME }}:latest
          sleep 5
          response=$(curl -o /dev/null -s -w "%{http_code}\n" localhost:8181/health)
          echo $response
          if [ $response -eq 200 ]; then
            echo 'Success'
            exit 0
          else
            echo 'Failed'
            exit 1
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'ghcr.io/${{ env.REPOSITORY_IMAGE }}:${{ steps.meta.outputs.SHORT_SHA }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Push to GHCR
        run: |
          docker push ghcr.io/${{ env.REPOSITORY_IMAGE }}:${{ steps.meta.outputs.SHORT_SHA }}
          docker push ghcr.io/${{ env.REPOSITORY_IMAGE }}:latest

  generate-certificate: # DAQUI PARA BAIXO, NÃO ALTERAR
    name: "Desafio Nível 3 - Certificado"
    needs: build-scan-and-push
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: "Gerar certificado"
        run: |
          mkdir -p certificates
          cat > certificates/level-3-certificate.md << EOF
          # Certificado de Conclusão - Nível 3

          **Descomplicando Github Actions - GitHub Actions Edition**
          ---

          Este certificado atesta que **${{ github.actor }}** concluiu com sucesso:
          ## Nível 3: Containers e Segurança

          **Competências desenvolvidas:**
          - Build de imagem Docker
          - Lint de Dockerfile com Hadolint
          - Scan de vulnerabilidades com Trivy (CRITICAL = 0)
          - Relatório de vulnerabilidades como artefato
          - Smoke test de execução do container
          - Publicação no GitHub Container Registry (GHCR) condicionada ao scan
          - Boas práticas de supply chain

          **Data de conclusão:** $(date)
          **Repositório:** ${{ github.repository }}
          **Workflow:** ${{ github.run_id }}

          ---
          **Badge conquistado:** Containers e Segurança

          ---
          *Certificado gerado automaticamente pelo GitHub Actions*
          *LINUXtips*
          EOF

      - name: "Upload do certificado"
        uses: actions/upload-artifact@v4
        with:
          name: level-3-certificate
          path: certificates/
          retention-days: 30
